---
import { YouTube } from "@astro-community/astro-embed-youtube";
import type { CollectionEntry } from "astro:content";
import VideoDuration from "../components/VideoDuration.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { fade } from "astro:transitions";
import { Image } from "astro:assets";
type Media = CollectionEntry<"media">;
type Props = Media["data"] & { slug?: Media["slug"] };

const {
  title,
  description,
  publishedAt,
  updatedDate,
  image,
  duration,
  videoUrl,
  poster,
  slug,
  tags,
  speakers,
  categories,
} = Astro.props;
---

<style>
  .hero-image {
    position: relative;
    width: 100%;
    overflow: hidden;
    height: auto;
  }
  .hero-image .background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 10;
    background-size: cover;
    background-position: center center;
    filter: blur(2rem);
    opacity: 1;
    overflow: hidden;
    animation: fadeIn 1.5s;
  }
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  .hero-image .video-embed {
    border-radius: 0px;
    margin: 0 auto;
    z-index: 100;
    aspect-ratio: auto 16/9;
    width: 100%;
  }
  .hero-image .video-poster {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
    z-index: 50;
    aspect-ratio: auto 16/9;
  }
  @media screen and (max-width: 1023px) {
    .hero-image {
      height: 405px;
    }
    .hero-image .video-embed {
      width: 100%;
      max-width: 720px;
    }
    .hero-image .video-poster {
      width: 100%;
      max-width: 720px;
    }
  }
  @media screen and (min-width: 1024px) {
    .hero-image {
      height: 506px;
    }
    .hero-image .video-embed {
      max-width: 900px;
    }
    .hero-image .video-poster {
      max-width: 900px;
    }
  }

  .prose {
    width: 100%;
    max-width: 60ch;
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  }
  .title {
    margin: 0 auto;
    padding: 2.5rem 1rem 0.5rem;
    text-align: center;
    line-height: 1;
    width: 100%;
    max-width: 85ch;
  }
  .title h1 {
    margin: 0;
  }
  .meta-data {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
    display: flex;
    gap: 1rem;
    justify-content: center;
  }
  .meta-data a {
    color: rgb(var(--gray-dark));
  }
  .meta-data span {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
  }
  .last-updated-on {
    font-style: italic;
  }
</style>

<article>
  <div class="hero-image">
    <YouTube
      id={videoUrl ?? ""}
      class="video-embed"
      transition:name={slug}
      poster={poster.src}
    />
    <div
      class="background"
      style={`background-image: url('${image.src}')`}
      transition:animate="none"
    >
    </div>
  </div>
  <div class="title">
    <h1>{title}</h1>
  </div>
  <div class="prose">
    <div class="meta-data">
      <span>üóìÔ∏è <FormattedDate date={publishedAt} /></span>
      <span
        >üïî
        <VideoDuration durationStr={duration} /></span
      >
    </div>

    <hr />
    <slot />
    <hr />
    <div class="meta-data">
      <div class="tags">
        üè∑Ô∏è
        {
          tags.map((tag) => (
            <a href={`/tags/${tag}`} class="tag">
              {tag}
            </a>
          ))
        }
      </div>
      <div class="tags">
        üë§
        {
          speakers.map((speaker) => (
            <a href={`/speakers/${speaker}`} class="speaker">
              {speaker}
            </a>
          ))
        }
      </div>
    </div>
  </div>
</article>

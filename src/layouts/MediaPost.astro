---
import { YouTube } from "@astro-community/astro-embed-youtube";
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import VideoDuration from "../components/VideoDuration.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";

import { Image } from "astro:assets";
type Media = CollectionEntry<"media">;
type Props = Media["data"] & { slug?: Media["slug"] };

const {
  title,
  description,
  publishedAt,
  updatedDate,
  image,
  duration,
  videoUrl,
  poster,
  slug,
  tags,
  categories,
} = Astro.props;
---

<html lang="en" transition:name="root" transition:animate="fade">
  <head>
    <BaseHead title={title} description={description} />

    <style>
      main {
        width: 100%;
        max-width: 100%;
        margin: 0;
        padding: 0;
      }
      .hero-image {
        width: 100%;
        background-color: #16161d;
      }
      .hero-image .video-embed {
        border-radius: 0px;
        margin: 0 auto;
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: rgb(var(--gray-dark));
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
      }
      .date {
        margin-bottom: 0.5em;
        color: rgb(var(--gray));
      }
      .last-updated-on {
        font-style: italic;
      }
    </style>
  </head>

  <body>
    <Header />
    <main transition:animate="fade">
      <article>
        <div class="hero-image">
          <YouTube
            id={videoUrl ?? ""}
            class="video-embed"
            transition:name={slug}
            poster={poster.src}
          />
        </div>
        <div class="prose">
          <div class="title">
            <h1>{title}</h1>
            <hr />
            <div class="date">
              <FormattedDate date={publishedAt} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <p>
              Duration:
              <VideoDuration durationStr={duration} />
            </p>
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>

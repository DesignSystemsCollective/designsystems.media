---
import { YouTube } from "@astro-community/astro-embed-youtube";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import VideoDuration from "../components/VideoDuration.astro";
import FormattedDate from "../components/FormattedDate.astro";

import { Image } from "astro:assets";
type Media = CollectionEntry<"media">;
type Props = Media["data"] & { slug?: Media["slug"] };

const {
  title,
  description,
  publishedAt,
  updatedDate,
  image,
  duration,
  videoUrl,
  poster,
  slug,
  tags,
  categories,
} = Astro.props;
---

<style>
  .hero-image {
    position: relative;
    width: 100%;
    background-color: #16161d;
    overflow: hidden;
    height: auto;
  }
  .hero-image .background {
    position: absolute;

    top: 50%;
    transform: translateY(-50%);
    left: 0;
    width: 100%;
    height: auto;
    z-index: 0;
    aspect-ratio: auto 16/9;
    overflow: hidden;
    object-fit: cover;
    filter: blur(1rem);
    opacity: 0.3;
  }
  .hero-image .video-embed {
    border-radius: 0px;
    margin: 0 auto;
    min-height: 320px;
    z-index: 100;
  }
  .prose {
    width: 720px;
    max-width: calc(100% - 2em);
    margin: auto;
    padding: 1em;
    color: rgb(var(--gray-dark));
  }
  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;
  }
  .title h1 {
    margin: 0 0 0.5em 0;
  }
  .date {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
  }
  .last-updated-on {
    font-style: italic;
  }
</style>

<BaseLayout>
  <article>
    <div class="hero-image" transition:animate="fade">
      <YouTube
        id={videoUrl ?? ""}
        class="video-embed"
        transition:name={slug}
        poster={poster.src}
      />
      <Image
        width={32}
        src={poster}
        alt=" "
        class="background"
        transition:animate="none"
      />
    </div>
    <div class="prose">
      <div class="title">
        <h1>{title}</h1>
        <hr />
        <div class="date">
          <FormattedDate date={publishedAt} />
          {
            updatedDate && (
              <div class="last-updated-on">
                Last updated on <FormattedDate date={updatedDate} />
              </div>
            )
          }
        </div>
        <p>
          Duration:
          <VideoDuration durationStr={duration} />
        </p>
      </div>
      <slot />
    </div>
  </article>
</BaseLayout>

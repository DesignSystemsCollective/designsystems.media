---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import VideoCard from "../../components/VideoCard.astro";
import MediaGrid from "../../layouts/MediaGrid.astro";
export async function getStaticPaths() {
  const allPosts = await getCollection("media");
  const uniqueSpeakers = [
    ...new Set(allPosts.map((post) => post.data.speakers).flat()),
  ];

  return uniqueSpeakers.map((speaker) => {
    const filteredPosts = allPosts.filter((post) => {
      return !post.data.draft && post.data.speakers.includes(speaker);
    });
    return {
      params: { speaker },
      props: { posts: filteredPosts },
    };
  });
}

// TODO: How to get the results sorting by date order?

const { speaker } = Astro.params;
const { posts } = Astro.props;
---

<style>
  .speakers {
    display: flex;
    flex-wrap: wrap;
  }

  .speaker {
    margin: 0.25em;
    border: dotted 1px #a1a1a1;
    border-radius: 0.5em;
    padding: 0.5em 1em;
    font-size: 1.15em;
    background-color: #f8fcfd;
  }

  main {
    width: 100%;
    max-width: 1600px;
    margin: auto;
    padding: 1rem;
  }
  @media screen and (min-width: 768px) {
    main {
      padding: 2rem;
    }
  }

  h2 {
    margin-block: 0 2rem;
  }

  @media (max-width: 720px) {
    h2 {
      padding: 1rem;
      margin: 1rem 0 0;
    }
  }
</style>

<BaseLayout sidebar={true}>
  <h2>Speaker: {speaker}</h2>
  <MediaGrid>
    {
      posts.map((post) => (
        <VideoCard
          title={post.data.title}
          poster={post.data.poster}
          duration={post.data.duration}
          slug={post.slug}
          publishedAt={post.data.publishedAt}
        />
      ))
    }
  </MediaGrid>
</BaseLayout>

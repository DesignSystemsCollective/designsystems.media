---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

import { Icon } from "astro-icon/components";
import slugify from "slugify";
import MediaGrid from "../../components/MediaGrid.astro";
export async function getStaticPaths() {
  const allPosts = await getCollection("media");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    if (!tag)
      return {
        params: { tag },
      };
    const filteredPosts = allPosts
      .filter((post) => !post.data.draft && post.data.tags?.includes(tag))
      .sort(
        (a, b) =>
          new Date(b.data.publishedAt).getTime() -
          new Date(a.data.publishedAt).getTime(),
      ); // Sorting by date, most recent first
    return {
      params: { slug: slugify(tag, { lower: true, remove: /[*+~.()'"!:@]/g }) },
      props: { posts: filteredPosts, tag },
    };
  });
}

const { slug } = Astro.params;
const { posts, tag } = Astro.props;
---

<BaseLayout sidebar={true} metadataProps={{ title: tag }}>
  <a href="/tags" class="breadcrumb">
    <Icon name="fluent:tag-20-filled" size={20} />Tags
  </a>
  <h2>{tag}</h2>
  <MediaGrid media={posts} />
</BaseLayout>

<style>
  h2 {
    margin-block: 0 2rem;
  }
  .breadcrumb {
    text-decoration: none;
  }
  .breadcrumb:hover {
    text-decoration: underline;
  }
  .breadcrumb [data-icon] {
    position: relative;
    top: 0.2em;
    margin-right: 0.25em;
    color: var(--tagCount-icon);
  }
  @media (max-width: 1024px) {
    h2,
    .breadcrumb {
      padding-left: 1rem;
      margin: 0;
    }
  }
</style>

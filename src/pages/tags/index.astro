---
import { getCollection } from "astro:content";
import LabelCount from "../../components/LabelCount.astro";
import Title from "../../components/Title.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import ResponsiveGrid from "../../layouts/ResponsiveGrid.astro";

const allPosts = await getCollection("media");

// Filter posts with tags
const filteredPosts = allPosts.filter((post) => {
  return !post.data.draft && post.data.tags && post.data.tags.length > 0;
});

const tags = [
  ...new Set(
    filteredPosts
      .map((post) => post.data.tags)
      .flat()
      .sort(),
  ),
];

function calculatePostCountForSpeaker(tagName) {
  // Assuming 'posts' is an array of post objects with 'tags' property
  return allPosts.filter((post) => post.data.tags?.includes(tagName)).length;
}
const title = "Tags";
const groupedTags = {};

// Group the tags by the first letter
tags.forEach((tag) => {
  if (!tag) return;
  const firstLetter = tag[0].toUpperCase(); // Convert to uppercase for consistency
  if (!groupedTags[firstLetter]) {
    groupedTags[firstLetter] = [];
  }
  groupedTags[firstLetter].push(tag);
});
---

<BaseLayout sidebar={false} metadataProps={{ title }}>
  <Title>{title}</Title>
  <div class="alphabet">
    {
      Object.keys(groupedTags).map((letter) => (
        <a href={`#${letter}`}>{letter}</a>
      ))
    }
  </div>
  <ResponsiveGrid>
    {
      Object.keys(groupedTags).map((letter) => (
        <div>
          <h2 id={letter}>{letter}</h2>
          <div class="grid">
            {groupedTags[letter].map((tag) => (
              <LabelCount
                type="tags"
                name={tag}
                count={calculatePostCountForSpeaker(tag)}
              />
            ))}
          </div>
        </div>
      ))
    }
  </ResponsiveGrid>
</BaseLayout>

<style>
  .alphabet {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    width: 100%;
    padding: 1rem;
    gap: 0.5em;
    margin-bottom: 1rem;
  }
  .alphabet a {
    font-size: 1.25rem;
    text-decoration: none;
    background: var(--tagCount-background);
    padding: 0.1em 0.6em 0em;
    border-radius: 1rem;
  }
  .alphabet a:hover {
    outline: 1px solid var(--tagCount-count);
  }
  .grid {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
  }
</style>

---
import { type CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PodcastPost from "../../templates/PodcastPost.astro";
import { convertToISO8601Duration } from "../../utils/convertToISO8601Duration";
import { allPosts } from "../../utils/mediaCollection";
import { Image } from 'astro:assets'; // Import the Image component
import { getCollection } from 'astro:content';
export async function getStaticPaths() {
  const posts = allPosts;
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"podcast">;

const post = Astro.props;
const { Content } = await post.render();
const headProps = {
  title: `${post.data.title} | Podcast`,
  description: post.data.description || post.data.title,
  image: post.data.poster?.src || post.data.image?.src,
  video: {
    title: post.data.title,
    description: post.data.description || post.data.title,
    thumbnailUrl: new URL(
      post.data.poster?.src || post.data.image?.src || "",
      Astro.site,
    ).toString(),
    uploadDate: new Date(post.data.publishedAt).toISOString(),
    duration: convertToISO8601Duration(post.data.duration),
    embedUrl: post.data.episodeUrl ?? "",
    actor: post.data.speakers?.[0],
  },
};



---

<BaseLayout sidebar={false} fullWidth={true} metadataProps={headProps}>
  <PodcastPost {...post.data} slug={post.slug}>
    <Content />
  </PodcastPost>
</BaseLayout>

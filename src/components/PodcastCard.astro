---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import MediaImage from './media/MediaImage.astro';

type Media = CollectionEntry<"podcast">;
type Props = Media["data"] & { slug?: Media["slug"] };

const { title, publishedAt, duration, image, slug, hasEpisodeImage, showSlug, podcastTitle } = Astro.props;

const showImages = import.meta.glob("/src/content/show/*/poster.jpg", {
  eager: true,
});

// Image loading logic
let imageToUse;

if (hasEpisodeImage === undefined) {
  // This is a show page - just use the image directly
  imageToUse = image.src;
} else {
  // This is an episode page
  if (hasEpisodeImage === true && image) {
    // Use episode image if it exists
    imageToUse = image.src;
  } else {
    // Fall back to show poster
    const showImagePath = `/src/content/show/${showSlug}/poster.jpg`;
    const showImage = showImages[showImagePath];
    if (showImage) {
      imageToUse = showImage.default.src;
    }
  }
}
---

<div class="media-item media-link">
  <a href={`/podcast/${slug}/`} >
     <MediaImage 
        src={imageToUse} 
        alt={title} 
        size="medium"
        duration={duration}
        type="podcast-duration"
      />
  </a>
    <div class="media-content">
    <a href={`/podcast/${slug}/`} class="title"><h3>{title}</h3></a>
      <a href={`/show/${showSlug}/`} class="meta showTitle">{podcastTitle}</a>
      <span class="date">
        <FormattedDate date={publishedAt} />
      </span>
    </div>
</div>

<style>
  /* Style for each media item */
  .media-item {
    margin: 0;
  }
  .media-link {
    text-decoration: none;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .media-link:hover {.media-image img {
    /* outline: 1px solid var(--accent-hover); */
    box-shadow: 0 0px 40px var(--accent-glow), 0 0px 10px var(--accent-hover);
    outline: 1px solid var(--accent-hover);
    transition: box-shadow 1s ease-out;
  }
.title {color: var(--accent)}
}
a:hover h3 {color: var(--accent)}
  .media-content a {text-decoration: none; border-bottom:none;}

  .media-image {
    height: auto;
    position: relative;
    background-color: rgba(0, 0, 0, 0.2);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    transition: box-shadow 0.2s ease-out;
  }

  .media-image img {
    width: 100%;
    height: 100%;
    aspect-ratio: auto 1/1;
    object-fit: cover;
  }

  a h3 {
    font-size: 16px;
    font-weight: 400;
    margin: 2px 0;
  }
  .meta {
    font-size: 14px;
    color: var(--tx-3);
  }

  a.meta:hover {
    text-decoration: underline;
  }

  .showTitle {
    font-size: 14px;
    font-weight: 400;
    color: var(--tx-2);
  }
  
  .media-content {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }
  .media-content .date {
    font-size: 13px;
    color: var(--tx-3);
  }

  @media screen and (max-width: 768px) {
    .media-link {
      display: grid;
      grid-template-columns: 1fr 4fr;
    }
  }
</style>

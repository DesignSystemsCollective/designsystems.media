---
// src/components/media/MetaItem.astro
import { Icon } from "astro-icon/components";
import { convertToSlug } from "../../utils/convertToSlug";

export interface Props {
  icon?: string;
  iconSize?: number;
  label?: string;
  type?: 'inline' | 'block';
  class?: string;
  speakers?: string[];
}

const { 
  speakers,
  icon, 
  iconSize = 20, 
  label, 
  type, 
  class: className = '' 
} = Astro.props;
---

<div class={`meta-item ${type} ${className}`}>
  {icon && <Icon name={icon} size={iconSize} />}
  {label && <span class="meta-label">{label}</span>}
  <div class="meta-content">
    <slot />
  {speakers && speakers.map((speaker) => (
    <a
      href={`/speakers/${convertToSlug(speaker)}/`}
      class="speaker"
      data-pagefind-filter="speaker"
      data-pagefind-weight="5"
    >
      {speaker}
    </a>
  ))}
  </div>
</div>

<style>
  .meta-item {
    display: flex;
    justify-content: center;
    align-items: left;
    gap: 0.25em;
    flex-direction: column;
  }


  .meta-item.block {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5em;
  }

  .meta-label {
    font-weight: 500;
  }

  .meta-content {
    display: contents;
  }

  /* Special styling for explicit badge */
  .meta-item :global(.explicit) {
    background: var(--accent);
    color: white;
    padding: 0.2em 0.5em;
    border-radius: 4px;
    font-size: 0.8em;
    font-weight: 600;
    text-transform: uppercase;
  }

  @media screen and (max-width: 1024px) {
    
    .meta-item {
    display: flex;
    justify-content:flex-start;
    align-items:center;
    gap:0.5rem;
    padding: 1em;
    flex-direction: column;
    min-height: 3rem;
  }

  }
</style>
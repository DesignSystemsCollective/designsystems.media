---
import { getCollection } from "astro:content";
const allPosts = await getCollection("media");

import { Icon } from "astro-icon";
const postCount = allPosts.length;

// Function to extract unique speakers
function getUniqueItems(key) {
  const uniqueItems = [];
  allPosts.forEach((post) => {
    post.data[key].forEach((item) => {
      if (!uniqueItems.includes(item)) {
        uniqueItems.push(item);
      }
    });
  });
  return uniqueItems;
}

// Get the list of unique tags
const uniqueTags = getUniqueItems("tags");

// Get the list of unique speakers
const uniqueSpeakers = getUniqueItems("speakers");

// Calculate the total count of unique tags and speakers
const totalTagCount = uniqueTags.length;
const totalSpeakerCount = uniqueSpeakers.length;
---

<div class="libraryStats">
  <div class="stat">
    <Icon name="fluent:video-clip-multiple-24-regular" size="4em" />
    <div class="info">
      <div data-type="label">Videos</div>
      <div data-type="count">{postCount}</div>
    </div>
  </div>
  <div class="stat">
    <Icon name="fluent:tag-multiple-24-regular" size="4em" />
    <div class="info">
      <div data-type="label">Tags</div>
      <div data-type="count">{totalTagCount}</div>
    </div>
  </div>
  <div class="stat">
    <Icon name="fluent:person-48-regular" size="4em" />
    <div class="info">
      <div data-type="label">Speakers</div>
      <div data-type="count">{totalSpeakerCount}</div>
    </div>
  </div>
</div>

<style>
  .libraryStats {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
    font-size: 1em;
  }
  @media screen and (max-width: 768px) {
    .libraryStats {
      margin-inline: 1rem;
      margin-block: 1rem;
      gap: 1rem;
    }
  }
  .libraryStats .stat {
    background: var(--tagCount-background);
    padding: 1em;
    border-radius: 1rem;
    border-color: var(--layout-border);
    border-style: solid;
    border-width: 1px;
  }

  .libraryStats [astro-icon] {
    color: var(--tagCount-icon);
    fill: var(--tagCount-icon);
  }

  .libraryStats div[data-type="label"] {
    text-transform: uppercase;
    color: var(--tagCount-text);
    line-height: 1.5em;
    font-size: 0.8em;
  }

  .libraryStats div[data-type="count"] {
    font-size: 2em;
    color: var(--tagCount-count);
    line-height: 1em;
  }

  @media screen and (min-width: 1024px) {
    .libraryStats {
      font-size: 1em;
    }
    .libraryStats .stat {
      display: flex;
      flex-direction: row;
      gap: 1em;
      align-items: center;
    }
  }
</style>

---
import type { CollectionEntry } from "astro:content";
import MediaImage from "./media/MediaImage.astro";
type Media = CollectionEntry<"show">;
type Props = Media["data"] & { slug?: Media["slug"] };

const { title, image, slug, speakers, episodeCount } = Astro.props;
---

<div class="media-item">
  <a href={`/show/${slug}/`} class="media-link">
    <MediaImage src={image.src} alt={title} />
    <div class="media-content">
      <h3 class="title">{title}</h3>
      <div class="meta speakers">{speakers.join(", ")}</div>
      <div class="meta">{episodeCount} episodes</div>
    </div>
  </a>
</div>

<style>
  /* Style for each media item */
  .media-item {
    margin: 0;
  }
  .media-link {
    text-decoration: none;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .media-link:hover {
    .media-image img {
      box-shadow:
        0 0px 40px var(--accent-glow),
        0 0px 10px var(--accent-hover);
      outline: 1px solid var(--accent-hover);
      transition: box-shadow 1s ease-out;
    }
    .title {
      color: rgb(var(--accent)) ;
    }
  }

  .media-image {
    box-shadow: 0 10px 30px var(--accent-glow);
    transition: box-shadow 1s ease-out;
  }

  .title {
    font-size: 16px;
    font-weight: 400;
    margin: 2px 0;
  }
  .meta {
    font-size: 14px;
    color: var(--tx-3);
  }
  .speakers {
    font-size: 15px;
  }
  .showTitle {
    font-size: 14px;
    font-weight: 400;
    color: var(--tx-2);
  }

  .media-content {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }
  .date {
    font-size: 13px;
    color: var(--tx-3);
  }

  @media screen and (max-width: 768px) {
    .media-link {
      display: grid;
      grid-template-columns: 1fr 4fr;
    }
    .duration {
      bottom: 0.4rem;
      right: 0.4rem;
      font-size: 0.7rem;
    }
  }
</style>

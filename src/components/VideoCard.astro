---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import MediaImage from "./media/MediaImage.astro";
import { formatDuration } from "../utils/formatDuration";

type Media = CollectionEntry<"media">;
type Props = Media["data"] & { slug?: Media["slug"] };

const {
  title,
  publishedAt,
  duration,
  poster,
  slug,
  layoutType = "grid",
} = Astro.props;

// Determine if it should be a list layout
const isListLayout = layoutType === "list";
---

<div
  class:list={[
    "media-item",
    "media-link",
    {
      "media-list-layout": isListLayout, // Apply this class when it's a list
      "media-grid-layout": !isListLayout, // Apply this class when it's a grid (default)
    },
  ]}
>
  <a href={`/video/${slug}/`}>
    <MediaImage src={poster.src} alt={title} ratio="video" />
  </a>
    <div class="media-content">
     <a href={`/video/${slug}/`}><h3 class="title">{title}</h3></a>
      <div class="meta">
        <span><FormattedDate date={publishedAt} /></span>
        <span>â€¢</span>
        <span>{formatDuration(duration)}</span>
      </div>
    </div>
</div>

<style>
  /* Style for each media item */
  .media-item {
    margin: 0;
  }
  .media-link {
    text-decoration: none;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    transition: box-shadow 1s ease-out;
  }
a {
    text-decoration: none;}
  .media-link:hover {
    .media-image img {
      box-shadow:
        0 0px 40px var(--accent-glow),
        0 0px 10px var(--accent-hover);
      outline: 1px solid var(--accent-hover);
      transition: box-shadow 1s ease-out;
    }
    .title {
      color: rgb(var(--accent));
    }
  }

  .title {
    font-size: 17px;
    font-weight: 400;
    margin: 2px 0;
  }

  .meta {
    font-size: 14px;
    color: var(--tx-3);
    display: flex;
    flex-direction: row;
    gap: 8px;
  }
  .duration {
    font-variant: small-caps;
    position: absolute;
    display: inline-block;
    color: white;
    background: rgba(0, 0, 0, 0.5);
    box-sizing: border-box;
    line-height: 1em;
    padding: 0.5em 0.5em 0.35em;
    border-radius: 0.4em;
    letter-spacing: 0.05em;

    font-size: 0.8rem;
    bottom: 0.5rem;
    right: 0.5rem;
  }

  /* New list layout (similar to your @media rule) */
  .media-list-layout {
    display: grid;
    grid-template-columns: minmax(80px, 100px) 1fr; /* The layout you want for list */
    gap: 1rem; /* Adjust gap as needed for list */
    align-items: center; /* Vertically align items in the list row */
  }

  @media screen and (max-width: 768px) {
    .media-grid-layout {
      display: grid;
      grid-template-columns: 1fr 4fr;
      align-items: center;
    }

    .media-link {
      display: grid;
      grid-template-columns: 2fr 3fr;
    }

    .media-image {
      border-radius: 2px;
    }

    .duration {
      bottom: 0.4rem;
      right: 0.4rem;
      font-size: 0.7rem;
    }
  }
</style>

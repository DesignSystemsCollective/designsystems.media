---
import { getCollection } from "astro:content";

import { Icon } from "astro-icon";
const allPosts = await getCollection("media");

// Filter posts with tags
const postsWithTags = allPosts.filter((post) => {
  return !post.data.draft && post.data.tags && post.data.tags.length > 0;
});

const tags = [
  ...new Set(
    postsWithTags
      .map((post) => post.data.tags)
      .flat()
      .sort(),
  ),
];

// Filter posts with speakers
const postsWithSpeakers = allPosts.filter((post) => {
  return (
    !post.data.draft && post.data.speakers && post.data.speakers.length > 0
  );
});

const speakers = [
  ...new Set(
    postsWithSpeakers
      .map((post) => post.data.speakers)
      .flat()
      .sort(),
  ),
];

function calculatePostCountForTag(tagName) {
  // Assuming 'posts' is an array of post objects with 'tags' property
  return allPosts.filter((post) => post.data.tags?.includes(tagName)).length;
}

function calculatePostCountForSpeaker(speakerName) {
  // Assuming 'posts' is an array of post objects with 'speakers' property
  return allPosts.filter((post) => post.data.speakers?.includes(speakerName))
    .length;
}
---

<aside id="sidebar">
  <details>
    <summary>
      <Icon name="fluent:tag-20-filled" size="20" /> Tags
      <Icon name="fluent:chevron-down-24-filled" size="24" class="toggle" />
    </summary>
    <ul class="tags">
      {
        tags.map((tag) => {
          const postCountForTag = calculatePostCountForTag(tag);
          return (
            <li>
              <a href={`/tags/${tag}`} class="tag">
                <span data-type="label">{tag}</span>{" "}
                <span data-type="count">{postCountForTag}</span>
              </a>
            </li>
          );
        })
      }
    </ul>
  </details>
  <details>
    <summary>
      <Icon name="fluent:person-20-filled" size="20" /> Speakers
      <Icon name="fluent:chevron-down-24-filled" size="24" class="toggle" />
    </summary>
    <ul class="tags">
      {
        speakers.map((speaker) => {
          const postCountForSpeaker = calculatePostCountForSpeaker(speaker);
          return (
            <li>
              <a href={`/speakers/${speaker}`} class="tag">
                <span data-type="label">{speaker}</span>{" "}
                <span data-type="count">{postCountForSpeaker}</span>
              </a>
            </li>
          );
        })
      }
    </ul>
  </details>
</aside>

<style>
  #sidebar {
    width: 100%;
    background: var(--sidebar-background);
    padding: 0.5rem 0 1rem;
    overflow: auto;
    height: calc(100dvh - var(--header-height));
    border-right: 1px solid var(--layout-border);
  }
  details {
    border-radius: 4px;
    padding: 0.2em 0em 0;
    margin-block-end: 0.5rem;
    user-select: none;
  }
  details[open] summary {
    border-bottom: 1px solid var(--layout-border);
    margin-bottom: 0.5em;
  }
  [astro-icon] {
    position: relative;
    top: 0.25rem;
  }
  summary {
    font-weight: bold;
    font-size: 1rem;
    margin: -0.2em 0;
    padding: 0.2em 1rem;
    list-style: none;
    position: relative;
  }
  summary svg.toggle {
    opacity: 0.5;
    right: 1.5rem;
    position: absolute;
    top: 0.15rem;
  }
  summary:hover svg.toggle {
    opacity: 1;
  }
  details[open] summary svg.toggle {
    transform: rotate(180deg);
  }
  .tags {
    display: flex;
    flex-direction: column;
    list-style-type: none;
    padding: 0 1em;
    margin-block: 0 2rem;
  }
  .tags li {
    line-height: 1.2rem;
    margin-block-end: 0.45rem;
  }
  .tags:last-child {
    margin-block-end: 0rem;
  }
  .tag {
    font-size: 1rem;
    color: rgb(var(--accent));
    display: flex;
    text-decoration: none;
    justify-content: space-between;
    align-items: center;
    line-height: 1.1em;
  }
  .tag:hover {
    color: var(--accent-hover);
  }
  .tag [data-type="label"] {
    border-bottom: 1px solid var(--accent-hover);
    padding: 0.1em 0 0;
  }
  .tag [data-type="count"] {
    display: inline-flex;
    color: var(--tx-2);
    background: var(--bg-2);
    padding: 0.25em 0.5em 0.1em;
    border-radius: 0.6em;
    align-items: baseline;
    line-height: 1em;
    min-width: 1.5em;
    font-size: 0.8em;
    font-weight: 700;
    justify-content: center;
  }
  @media screen and (max-width: 1024px) {
    #sidebar {
      display: none;
    }
  }
</style>

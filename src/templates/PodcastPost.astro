---
import { Icon } from "astro-icon/components";
import { repository } from "../../package.json";
import FormattedDate from "../components/FormattedDate.astro";
import Title from "../components/Title.astro";
import MetaDataList from "../components/media/MetaDataList.astro";
import PodcastArtwork from "../components/media/PodcastArtwork.astro";
import { convertToSlug } from "../utils/convertToSlug";
import { formatDuration } from "../utils/formatDuration";
import { getAudioMimeType } from "../utils/audio";
import { getShowImage } from "../utils/images";
import type { BasePodcastProps, ImageType } from "../types/media";
import type { MetaDataItem } from "../types/metadata";

type Props = BasePodcastProps;

const {
  title,
  publishedAt,
  image,
  duration = "",
  audioUrl,
  episodeUrl,
  podcastTitle,
  poster,
  slug,
  tags,
  speakers,
  showSlug,
  season,
  episode,
  hasEpisodeImage,
} = Astro.props;

const imageToUse = getShowImage(showSlug, hasEpisodeImage ?? false, image?.src);
---

<article data-pagefind-body data-pagefind-sort>
  <div class="hero-image" data-pagefind-meta={`image:${imageToUse}`}>
    <div class="audio-player-container">
      <PodcastArtwork
        imageUrl={imageToUse}
        alt={`${podcastTitle} artwork`}
        size="large"
      />
      {
        audioUrl && (
          <audio controls preload="metadata" class="audio-embed">
            <source src={audioUrl} type={getAudioMimeType(audioUrl)} />
            Your browser does not support the audio element.
          </audio>
        )
      }
    </div>
    <div class="scrim">
      <div class="page-title">
        <Title data-pagefind-meta="title">{title}</Title>
        <a
          href={`/show/${showSlug}/`}
          class="show"
          data-pagefind-filter="show"
          data-pagefind-weight="5">{podcastTitle}</a>
      </div>
    </div>
    <div class="background" style={`background-image: url('${imageToUse}')`}>
    </div>
  </div>

  <div class="content">
      <MetaDataList
      items={[
        {
          icon: "fluent:calendar-date-20-filled",
          content: <FormattedDate date={publishedAt} data-pagefind-sort="date" />
        },
        {
          icon: "fluent:clock-20-filled",
          content: <span data-pagefind-sort="duration">{formatDuration(duration)}</span>
        },
        ...(season && episode ? [{
          icon: "fluent:number-symbol-20-filled",
          content: `S${season}E${episode}`
        }] : []),
        ...(tags?.map(tag => ({
          icon: "fluent:tag-20-filled",
          content: tag,
          link: `/tags/${convertToSlug(tag)}/`,
          filter: "tag"
        })) || []),
        ...(speakers?.map(speaker => ({
          icon: "fluent:person-20-filled",
          content: speaker,
          link: `/speakers/${convertToSlug(speaker)}/`,
          filter: "speaker"
        })) || []),
        {
          icon: "fluent:edit-20-filled",
          content: "Edit on GitHub",
          link: `${repository.url}/tree/main/src/content/podcast/${slug}/index.mdx`
        }
      ]}
    />
    <div class="prose" data-pagefind-weight="3">
      <slot />
    </div>
  </div>
</article>

<style>
  .hero-image {
    position: relative;
    width: 100vw;
    overflow: hidden;
    height: auto;
    margin: -1.5rem -1.5rem 0rem -1.5rem;
    min-height: 300px;
  }
  .hero-image .background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 10;
    background-size: cover;
    background-position: center center;
    opacity: 1;
    overflow: hidden;
    animation: fadeIn 1.5s;
  }
  .hero-image .scrim {
    content: "";
    z-index: 15;
    position: relative;
    margin-top: -6rem;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 5rem 1rem 2rem;
    background: var(--scrim-gradient);
  }
  .hero-image .background::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(2.5rem);
  }
  .page-title {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0rem;
  }
  .page-title h1.title {
    padding: 1rem 0 0;
  }
  .page-title .show {
    font-weight: 600;
  }
  .audio-player-container {
    position: relative;
    z-index: 100;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    min-height: 250px;
    gap: 1.5rem;
  }
  .podcast-artwork {
    width: 200px;
    height: 200px;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  }
  .podcast-artwork img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .audio-embed {
    width: 100%;
    max-width: 600px;
    height: 54px;
    border-radius: 8px;
    backdrop-filter: blur(10px);
  }
  .audio-embed::-webkit-media-controls-panel {
    background-color: rgba(255, 255, 255, 0.1);
  }
  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  :global(.title) {
    margin: 0 auto 1em;
    padding: 2.5rem 0rem 0.5rem;
    width: 100%;
    max-width: 900px;
  }
  .prose {
    margin: 0;
    color: var(--body-text);
    overflow-wrap: anywhere;
  }
  :global(.prose h1),
  :global(.prose h2),
  :global(.prose h3),
  :global(.prose h4),
  :global(.prose h5),
  :global(.prose h6) {
    font-size: 1em;
  }
  .meta-data {
    color: var(--meta-data);
    padding: 1rem 0em;
    padding-left: 1.8rem;
    display: inline-flex;
    flex-wrap: wrap;
    flex-direction: column;
    gap: 1rem 0;
    font-size: 1.1rem;
    border-bottom: 1px solid var(--hr);
    justify-content: baseline;
  }
  .meta-data a {
    color: var(--meta-data-link);
  }

  .meta-data a:hover {
    color: var(--accent-hover);
  }
  .meta-data span {
    color: var(--meta-data);
  }
  .tags,
  .speakers {
    line-height: normal;
    align-items: baseline;
    margin-block-start: 0;
    display: flex;
    flex-wrap: none;
    flex-direction: column;
    gap: 0.5em 0em;
  }
  .break {
    display: none;
  }
  .meta-data [data-icon] {
    margin-right: 0.25em;
    position: absolute;
    transform: translateX(-1.8rem);
  }
  .meta-data span.inline [data-icon] {
    margin-top: 0.2em;
  }
  .content {
    width: 100%;
    max-width: 900px;
    margin: auto;
    padding: 1rem;
    display: grid;
    gap: 2rem;
    justify-content: center;
    align-items: start;
    grid-template-columns: minmax(100px, 200px) 1fr;
  }
  @media screen and (max-width: 1024px) {
    .hero-image {
      height: auto;
      margin: 0;
    }
    .audio-player-container {
      padding: 1.5rem;
      min-height: 200px;
    }
    .podcast-artwork {
      width: 150px;
      height: 150px;
    }
    .audio-embed {
      max-width: 100%;
    }
    :global(.title) {
      padding: 2.5rem 1rem 0.5rem;
    }
    .meta-data {
      padding-left: 0;
      flex-direction: row;
      gap: 0em 2rem;
    }
    .meta-data [data-icon] {
      position: relative;
      transform: translateX(0);
    }
    .tags,
    .speakers {
      display: inline-flex;
      flex-wrap: wrap;
      flex-direction: row;
      line-height: normal;
      gap: 0.25em 1em;
      align-items: baseline;
      margin-block-start: 0.5em;
    }
    .inline {
      margin-block-start: 0.5em;
    }
    .break {
      flex-basis: 100%;
      height: 0;
      display: block;
    }
    .content {
      display: flex;
      flex-direction: column;
    }
  }
</style>

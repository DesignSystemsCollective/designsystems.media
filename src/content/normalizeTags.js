const fs = require("fs");
const path = require("path");

const normalizedTags = [
  "AB Testing",
  "AI",
  "AI Jam",
  "AMA",
  "APCA Color Contrast",
  "API",
  "Abstract",
  "Accessibility",
  "Adaptability",
  "Adapting",
  "Adaptive",
  "Addiction",
  "Adoption",
  "Advocacy",
  "Agency",
  "Agnostic",
  "Alignment",
  "All Day Hey!",
  "An Event Apart",
  "Analytics",
  "Animation",
  "Ant",
  "Apple",
  "Architecture",
  "Art Direction",
  "Astro",
  "Atlassian",
  "Atomic Audit",
  "Atomic Design",
  "Audience",
  "Automation",
  "Automator",
  "Axe-Con",
  "BDD",
  "Back To School With Amy And Geri",
  "Backlight",
  "Balance",
  "Basics",
  "Best Practices",
  "Beyond The Button",
  "Bias",
  "Brainstorming",
  "Brand",
  "Brand Identity",
  "Brand Management",
  "Branding",
  "Broken Promises",
  "Building Blocks",
  "Burnout",
  "Business Case",
  "Business Impact",
  "Business Value",
  "Buy-In",
  "CLI",
  "CMS",
  "CSS",
  "CSS Variables",
  "Canvas",
  "Capitalism",
  "Career",
  "Careers",
  "Cars",
  "Case Studies",
  "Case Study",
  "Challenges",
  "Change",
  "Change Management",
  "Charity",
  "ChatGPT",
  "Clarity",
  "Code",
  "Code & Pixels",
  "Coding Design Systems",
  "Collaboration",
  "Color",
  "Color System",
  "Color Theory",
  "Communication",
  "Community",
  "Complexity",
  "Component Automator Plugin",
  "Component Library",
  "Component Spec",
  "Components",
  "Composability",
  "Compound Components",
  "Conferences",
  "Config",
  "Consistency",
  "Consultancy",
  "Consulting",
  "Content",
  "Content Writing",
  "Continuous Design Systems",
  "Contracting",
  "Contrast",
  "Contribution",
  "Converge",
  "Course",
  "Coverage",
  "Creative",
  "Creativity",
  "Cross Device",
  "Cross-Platform Design Systems",
  "Culture",
  "DSHackathon",
  "DSW Day",
  "Dark Mode",
  "Dashlane",
  "Data",
  "Data Driven",
  "Data Visualisation",
  "Data Viz",
  "Data-Rich Experiences",
  "Decision Making",
  "Decisions",
  "Deep Dive",
  "Definition",
  "Delight",
  "Deployment",
  "Design In Code",
  "Design Language",
  "Design Ops",
  "Design Quality",
  "Design System Management",
  "Design System Office Hours",
  "Design System Social Club",
  "Design Systems",
  "Design Systems Coalition NYC",
  "Design Systems Field Guide",
  "Design Systems London",
  "Design Systems Rodeo",
  "Design Systems WTF",
  "Design Team Of One",
  "Design Technologists",
  "Design Token Naming",
  "Design Tokens",
  "DesignOps",
  "DesignOps Island Discs",
  "DesignOps Melbourne",
  "Developer",
  "Developer Experience",
  "Developer Handoffs",
  "Developers",
  "Development",
  "Discussion",
  "Diversity",
  "Documentation",
  "Documenting",
  "Downsizing",
  "Drupal",
  "Dynamic",
  "Ecosystem",
  "Editorial",
  "Education",
  "Efficiency",
  "Email",
  "Engagement",
  "Engineering",
  "Enterprise",
  "Ethics",
  "Exclusion",
  "Exotic Platforms",
  "Expectations Vs Reality",
  "Fail",
  "Fails",
  "Failure",
  "Feedback",
  "Figma",
  "Figma Library Limits",
  "Figma Plugin",
  "Figma Styles",
  "Figma Tokens",
  "Figma UI Kit",
  "Figma Variables",
  "Fireside Chat",
  "Flexibility",
  "Foundations",
  "Framework",
  "Frameworks",
  "Freelance",
  "Frustrations",
  "Future Commerce Finland",
  "Future Proof",
  "Get Started",
  "Git",
  "Github",
  "Global",
  "Global Design System",
  "Governance",
  "Government",
  "Grids",
  "Growth",
  "Guidelines",
  "Hack",
  "Hackathon",
  "Handoff",
  "Handover",
  "Harm",
  "Harmful",
  "Hatch Conference",
  "Headless",
  "Headless Design Systems",
  "Headless UI",
  "Healthcare Organizations",
  "Heart",
  "How We Document 2024",
  "Hybrids",
  "Impact",
  "Improvements",
  "Inclusion",
  "Inclusivity",
  "Inconsistency",
  "Inefficiencies",
  "Infinite Scroll",
  "Infrastructure",
  "Inspiration",
  "Integration",
  "Into Design Systems",
  "Introduction",
  "Investment",
  "iOS Accessibility",
  "Jobs",
  "Journey",
  "Journey Systems",
  "KPIs",
  "Knapsack",
  "Leadership",
  "Lean Approach",
  "Lean Design Systems",
  "Learnings",
  "Leonardo",
  "Linear",
  "Lit",
  "Localization",
  "Maintenance",
  "Management",
  "Managing",
  "Marketing",
  "Maturity",
  "Maturity Model",
  "Measurement",
  "Meetup",
  "Metaverse",
  "Metrics",
  "Mindset",
  "Modular",
  "Momentum",
  "Multi Brand",
  "Multi Platform",
  "Multi Product",
  "Multi Theme",
  "Multi Theming",
  "Multiple Systems",
  "NASA",
  "Naming",
  "Naming Conventions",
  "Next Steps",
  "No-Code",
  "Nuxt",
  "OKRs",
  "Omlet",
  "Open Props",
  "Open Source",
  "OpenAI",
  "Opinions",
  "Panel",
  "Participation",
  "Passion Projects",
  "Pattern Language",
  "Pattern Library",
  "Patterns",
  "People",
  "Performance",
  "Personal Growth",
  "Personalization",
  "Pinterest",
  "Planning",
  "Playground",
  "Playroom",
  "Politics",
  "Post-MVP",
  "Practice",
  "Principles",
  "Prioritisation",
  "Problems",
  "Process",
  "Processes",
  "Product",
  "Product Demo",
  "Productivity",
  "Project Management",
  "Psychology",
  "Q&A",
  "QA",
  "Quality",
  "ROI",
  "Recap",
  "Recruitment",
  "Reflection",
  "Research",
  "Resilience",
  "Resource Hints",
  "Risks",
  "Roadmap",
  "Roadmaps",
  "Roles",
  "Roundtable",
  "SPA",
  "SSG",
  "Scale",
  "Semantic Versioning",
  "Service Design",
  "Services",
  "Shorts",
  "Shoutouts",
  "Showcase",
  "Sketch",
  "Smaller Organisations",
  "Smashing",
  "Soft Skills",
  "SolidJS",
  "Spacing",
  "Spacing Tokens",
  "Spatial",
  "Specify",
  "Specs",
  "Speed",
  "Spotify",
  "Stakeholders",
  "Standards",
  "Stencil",
  "Stewardship",
  "Stitches",
  "Storyboard",
  "Storybook",
  "Strategy",
  "Style Dictionary",
  "Style Guides",
  "Success",
  "Supernova",
  "Support",
  "Sustainable",
  "Svelte",
  "Sveltekit",
  "Systematic Design With Code",
  "Systems",
  "TDD",
  "TVs",
  "Tailwind",
  "Talents",
  "Team",
  "Team Model",
  "Team Size",
  "Teams",
  "Technology",
  "Testing",
  "The Future Of Design Systems",
  "The Product Shipping Forecast",
  "The Question",
  "Theming",
  "Tokens Studio",
  "Tooling",
  "Tools",
  "Transformation",
  "Trends",
  "Trust",
  "Tutorial",
  "Typography",
  "Typography Scales",
  "UI Foundations",
  "UI Kit",
  "UX",
  "UX Pin",
  "Uber",
  "Uncertainty",
  "Unified",
  "Unstyled",
  "Unity",
  "Universal Design System",
  "Unsorted",
  "Usage",
  "User Feedback",
  "User Research",
  "Users",
  "VR",
  "Valentines",
  "Value",
  "Variables",
  "Versioning",
  "Vision",
  "Visual Identity",
  "Visualizations",
  "WCAG 2.2",
  "WeAreDevelopers",
  "Web Components",
  "Webinar",
  "What Is A Design System",
  "WhatsApp",
  "Wireframing",
  "WiseTech",
  "Workflow",
  "Workflows",
  "Workshop",
  "YLD",
  "Zeplin",
  "Zeroheight",
];

const tagMap = Object.fromEntries(
  normalizedTags.map((tag) => [tag.toLowerCase(), tag])
);

function normalizeTags(tags) {
  return tags
    .map((tag) =>
      tag
        .trim()
        .replace(/^["']+|["']+$/g, "")
        .toLowerCase()
    )
    .filter((t, i, arr) => arr.indexOf(t) === i) // remove duplicates
    .map((t) => tagMap[t] || t) // normalize to Title Case
    .sort();
}

function updateTagsInFile(filePath) {
  const content = fs.readFileSync(filePath, "utf8");

  const tagRegex = /^tags:\s*\[([^\]]*)\]/m;
  const match = content.match(tagRegex);

  if (!match) return;

  const originalTagString = match[1];
  const tags = originalTagString
    .split(",")
    .map((tag) => tag.trim().replace(/^["']+|["']+$/g, ""))
    .filter(Boolean);

  const normalized = normalizeTags(tags);

  const newTagLine = `tags: [${normalized.map((t) => `"${t}"`).join(", ")}]`;
  const newContent = content.replace(tagRegex, newTagLine);

  fs.writeFileSync(filePath, newContent, "utf8");
  console.log(`âœ… Updated tags in ${filePath}`);
}

function walkDir(dir) {
  for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
    const fullPath = path.join(dir, entry.name);
    if (entry.isDirectory()) {
      walkDir(fullPath);
    } else if (entry.isFile() && entry.name === "index.mdx") {
      updateTagsInFile(fullPath);
    }
  }
}

walkDir("./media/");
